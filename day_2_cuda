#include<stdio.h>
#include<stdlib.h>
__global__ void calc(double *c,double *a,double *b,double alpha)
{
    int i = blockIdx.x*blockDim.x + threadIdx.x;
    c[i] =a[i] + alpha*b[i];
}
int main()
{
    int size = 400 * sizeof(double);
    double a[400],b[400],c[400],alpha,*ad,*bd,*cd;
    int i=0;
    alpha = 0.001;
    for(i=0;i<400;i++)
    {
        a[i]=i;
        b[i]=i;
        c[i]=0;
    }
    cudaMalloc(&ad,size);
    cudaMalloc(&bd,size);
    cudaMemcpy(ad,a,size,cudaMemcpyHostToDevice);
    cudaMemcpy(bd,b,size,cudaMemcpyHostToDevice);

    cudaMalloc(&cd,size);

    dim3 DimGrid(10,1);
    dim3 DimBlock(40,1);

    calc<<<DimGrid,DimBlock>>>(cd,bd,ad,alpha);
    cudaMemcpy(c,cd,size,cudaMemcpyDeviceToHost);
    for(i=0;i<400;i++)
    {
        printf("\t%lf",c[i]);
    }
    cudaFree(ad);
    cudaFree(bd);
    cudaFree(cd);
}
