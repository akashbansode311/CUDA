#include<stdio.h>
#include<stdlib.h>

__global__ void arradd(int* md,int* nd,int* pd)
{
    int id = threadIdx.x;
    pd[id] = md[id] + nd[id];
} 

int main()
{
    int *m,*n,*p;
    int i=0;
    cudaMallocManaged(&m,200*sizeof(int));
    cudaMallocManaged(&n,200*sizeof(int));
    cudaMallocManaged(&p,200*sizeof(int));

    for(i=0;i<200;i++)
    {
        m[i]=i;
        n[i]=i;
        p[i]=0;
    }
    dim3 DimGrid(1,1);
    dim3 DimBlock(200,1);
    arradd<<< DimGrid,DimBlock >>>(m,n,p);
    cudaDeviceSynchronize();
    for(i=0;i<200;i++)
    {
        printf("\t%d",p[i]);
    }
    cudaFree(m);
    cudaFree(n);
    cudaFree(p);
}
